// source: v1/tshd_events_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.teleport.terminal.v1.GatewayCertExpired', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ReloginRequiredRequest', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ReloginRequiredRequest.ReasonCase', null, global);
goog.exportSymbol('proto.teleport.terminal.v1.ReloginRequiredResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.ReloginRequiredRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.teleport.terminal.v1.ReloginRequiredRequest.oneofGroups_);
};
goog.inherits(proto.teleport.terminal.v1.ReloginRequiredRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.ReloginRequiredRequest.displayName = 'proto.teleport.terminal.v1.ReloginRequiredRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.GatewayCertExpired = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.GatewayCertExpired, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.GatewayCertExpired.displayName = 'proto.teleport.terminal.v1.GatewayCertExpired';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.teleport.terminal.v1.ReloginRequiredResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.teleport.terminal.v1.ReloginRequiredResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.teleport.terminal.v1.ReloginRequiredResponse.displayName = 'proto.teleport.terminal.v1.ReloginRequiredResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.ReasonCase = {
  REASON_NOT_SET: 0,
  GATEWAY_CERT_EXPIRED: 2
};

/**
 * @return {proto.teleport.terminal.v1.ReloginRequiredRequest.ReasonCase}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.getReasonCase = function() {
  return /** @type {proto.teleport.terminal.v1.ReloginRequiredRequest.ReasonCase} */(jspb.Message.computeOneofCase(this, proto.teleport.terminal.v1.ReloginRequiredRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.ReloginRequiredRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.ReloginRequiredRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rootClusterUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gatewayCertExpired: (f = msg.getGatewayCertExpired()) && proto.teleport.terminal.v1.GatewayCertExpired.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.ReloginRequiredRequest}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.ReloginRequiredRequest;
  return proto.teleport.terminal.v1.ReloginRequiredRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.ReloginRequiredRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.ReloginRequiredRequest}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootClusterUri(value);
      break;
    case 2:
      var value = new proto.teleport.terminal.v1.GatewayCertExpired;
      reader.readMessage(value,proto.teleport.terminal.v1.GatewayCertExpired.deserializeBinaryFromReader);
      msg.setGatewayCertExpired(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.ReloginRequiredRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.ReloginRequiredRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRootClusterUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGatewayCertExpired();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.teleport.terminal.v1.GatewayCertExpired.serializeBinaryToWriter
    );
  }
};


/**
 * optional string root_cluster_uri = 1;
 * @return {string}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.getRootClusterUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.ReloginRequiredRequest} returns this
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.setRootClusterUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional GatewayCertExpired gateway_cert_expired = 2;
 * @return {?proto.teleport.terminal.v1.GatewayCertExpired}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.getGatewayCertExpired = function() {
  return /** @type{?proto.teleport.terminal.v1.GatewayCertExpired} */ (
    jspb.Message.getWrapperField(this, proto.teleport.terminal.v1.GatewayCertExpired, 2));
};


/**
 * @param {?proto.teleport.terminal.v1.GatewayCertExpired|undefined} value
 * @return {!proto.teleport.terminal.v1.ReloginRequiredRequest} returns this
*/
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.setGatewayCertExpired = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.teleport.terminal.v1.ReloginRequiredRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.teleport.terminal.v1.ReloginRequiredRequest} returns this
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.clearGatewayCertExpired = function() {
  return this.setGatewayCertExpired(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.teleport.terminal.v1.ReloginRequiredRequest.prototype.hasGatewayCertExpired = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.GatewayCertExpired.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.GatewayCertExpired.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.GatewayCertExpired} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.GatewayCertExpired.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    targetUri: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.GatewayCertExpired}
 */
proto.teleport.terminal.v1.GatewayCertExpired.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.GatewayCertExpired;
  return proto.teleport.terminal.v1.GatewayCertExpired.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.GatewayCertExpired} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.GatewayCertExpired}
 */
proto.teleport.terminal.v1.GatewayCertExpired.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.GatewayCertExpired.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.GatewayCertExpired.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.GatewayCertExpired} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.GatewayCertExpired.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTargetUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string gateway_uri = 1;
 * @return {string}
 */
proto.teleport.terminal.v1.GatewayCertExpired.prototype.getGatewayUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.GatewayCertExpired} returns this
 */
proto.teleport.terminal.v1.GatewayCertExpired.prototype.setGatewayUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string target_uri = 2;
 * @return {string}
 */
proto.teleport.terminal.v1.GatewayCertExpired.prototype.getTargetUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.teleport.terminal.v1.GatewayCertExpired} returns this
 */
proto.teleport.terminal.v1.GatewayCertExpired.prototype.setTargetUri = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.teleport.terminal.v1.ReloginRequiredResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.teleport.terminal.v1.ReloginRequiredResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.teleport.terminal.v1.ReloginRequiredResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ReloginRequiredResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.teleport.terminal.v1.ReloginRequiredResponse}
 */
proto.teleport.terminal.v1.ReloginRequiredResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.teleport.terminal.v1.ReloginRequiredResponse;
  return proto.teleport.terminal.v1.ReloginRequiredResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.teleport.terminal.v1.ReloginRequiredResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.teleport.terminal.v1.ReloginRequiredResponse}
 */
proto.teleport.terminal.v1.ReloginRequiredResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.teleport.terminal.v1.ReloginRequiredResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.teleport.terminal.v1.ReloginRequiredResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.teleport.terminal.v1.ReloginRequiredResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.teleport.terminal.v1.ReloginRequiredResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.teleport.terminal.v1);
