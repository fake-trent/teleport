// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: v1/tshd_events_service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TshdEventsServiceClient is the client API for TshdEventsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TshdEventsServiceClient interface {
	// TODO: Add comment.
	ReloginRequired(ctx context.Context, in *ReloginRequiredRequest, opts ...grpc.CallOption) (*ReloginRequiredResponse, error)
}

type tshdEventsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTshdEventsServiceClient(cc grpc.ClientConnInterface) TshdEventsServiceClient {
	return &tshdEventsServiceClient{cc}
}

func (c *tshdEventsServiceClient) ReloginRequired(ctx context.Context, in *ReloginRequiredRequest, opts ...grpc.CallOption) (*ReloginRequiredResponse, error) {
	out := new(ReloginRequiredResponse)
	err := c.cc.Invoke(ctx, "/teleport.terminal.v1.TshdEventsService/ReloginRequired", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TshdEventsServiceServer is the server API for TshdEventsService service.
// All implementations must embed UnimplementedTshdEventsServiceServer
// for forward compatibility
type TshdEventsServiceServer interface {
	// TODO: Add comment.
	ReloginRequired(context.Context, *ReloginRequiredRequest) (*ReloginRequiredResponse, error)
	mustEmbedUnimplementedTshdEventsServiceServer()
}

// UnimplementedTshdEventsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTshdEventsServiceServer struct {
}

func (UnimplementedTshdEventsServiceServer) ReloginRequired(context.Context, *ReloginRequiredRequest) (*ReloginRequiredResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReloginRequired not implemented")
}
func (UnimplementedTshdEventsServiceServer) mustEmbedUnimplementedTshdEventsServiceServer() {}

// UnsafeTshdEventsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TshdEventsServiceServer will
// result in compilation errors.
type UnsafeTshdEventsServiceServer interface {
	mustEmbedUnimplementedTshdEventsServiceServer()
}

func RegisterTshdEventsServiceServer(s grpc.ServiceRegistrar, srv TshdEventsServiceServer) {
	s.RegisterService(&TshdEventsService_ServiceDesc, srv)
}

func _TshdEventsService_ReloginRequired_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReloginRequiredRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TshdEventsServiceServer).ReloginRequired(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/teleport.terminal.v1.TshdEventsService/ReloginRequired",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TshdEventsServiceServer).ReloginRequired(ctx, req.(*ReloginRequiredRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TshdEventsService_ServiceDesc is the grpc.ServiceDesc for TshdEventsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TshdEventsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "teleport.terminal.v1.TshdEventsService",
	HandlerType: (*TshdEventsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReloginRequired",
			Handler:    _TshdEventsService_ReloginRequired_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/tshd_events_service.proto",
}
